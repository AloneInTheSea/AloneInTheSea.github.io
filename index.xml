<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Blog</title>
    <link>https://AloneInTheSea.github.io/</link>
    <description>Recent content on My Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://AloneInTheSea.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring</title>
      <link>https://AloneInTheSea.github.io/spring/</link>
      <pubDate>Fri, 17 Jul 2020 18:38:08 +0800</pubDate>
      
      <guid>https://AloneInTheSea.github.io/spring/</guid>
      <description>1、Spring 1.1、什么是Spring？  Spring字面意思为春天，意思是给软件行业带来了春天 创始人：Rod Johnson， Spring Framework创始人，著名作者。 他是悉尼大学的博士，然而他的专业不是计算机，而是音乐学。 2002年，首次推出Spring的雏形：Interface21框架 以Interface21框架为基础，经过重新设计，不断丰富其内涵和功能，于2004年3月24日发布1.0正式版的Spring框架 Spring设计理念：“不重复造轮子”，使现有的技术变得更加容易使用 本身是一个大杂烩，整合了现有的技术框架  1.2、如何获得Spring？ 官网：https://docs.spring.io/spring/docs/5.2.5.RELEASE/spring-framework-reference/index.html
官方下载地址：https://repo.spring.io/release/org/springframework/spring/
GitHub：https://github.com/spring-projects/spring-framework
maven：https://mvnrepository.com/artifact/org.springframework/spring-webmvc
&amp;lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-webmvc&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.2.5.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-jdbc&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.2.5.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 1.3、优点及缺点 1.3.1、优点   Spring是一个开源免费的框架（容器）
  Spring是一个轻量级，低入侵式的框架，代码污染极低
  方便解耦，简化开发
 通过Spring提供的IoC容器，我们可以将对象之间的依赖关系交由Spring进行控制，避免硬编码所造成的过度程序耦合。有了Spring，用户不必再为单实例模式类、属性文件解析等这些很底层的需求编写代码，可以更专注于上层的应用。    AOP编程的支持
 通过Spring提供的AOP功能，方便进行面向切面的编程，许多不容易用传统OOP实现的功能可以通过AOP轻松应付。 Spring的AOP支持允许将一些通用任务如安全、事务、日志等进行集中式管理，从而提供了更好的复用    支持处理事务，而且可以整合其他Java框架
  总结：==Spring就是一个轻量级的控制反转（IOC）和面向切面编程的框架==
1.3.2、缺点  因为发展的时间太久，违背了原来的理念，即 “使现有的技术变得更加容易使用”，现在的Spring配置十分繁琐，开发并不简单，人称 “配置地域”  1.4、7大组件 组成 Spring 框架的每个模块（或组件）都可以单独存在，或者与其他一个或多个模块联合实现。每个模块的功能如下：</description>
    </item>
    
    <item>
      <title>SpringMVC</title>
      <link>https://AloneInTheSea.github.io/springmvc/</link>
      <pubDate>Fri, 17 Jul 2020 18:35:08 +0800</pubDate>
      
      <guid>https://AloneInTheSea.github.io/springmvc/</guid>
      <description>1、回顾MVC 1.1、什么是MVC   MVC是模型(Model)、视图(View)、控制器(Controller)的简写，是一种软件设计规范。
  职责分析：
- **Controller：控制器**取得表单数据调用业务逻辑转向指定的页面   Model：模型
业务逻辑 保存数据的状态
  View：视图
显示页面
    2、Spring MVC 2.1、概述  Spring MVC是Spring Framework的一部分，是基于Java实现MVC的轻量级Web框架。  我们为什么要学习SpringMVC呢?
Spring MVC的特点：
 轻量级，简单易学 高效 , 基于请求响应的MVC框架 与Spring兼容性好，无缝结合 约定优于配置 功能强大：RESTful、数据验证、格式化、本地化、主题等 简洁灵活  3、第一个Spring MVC程序  配置web.xml，注册DispatcherServlet  &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;web-app xmlns=&amp;#34;http://xmlns.jcp.org/xml/ns/javaee&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&amp;#34; version=&amp;#34;3.1&amp;#34; metadata-complete=&amp;#34;true&amp;#34;&amp;gt; &amp;lt;!--1.注册DispatcherServlet--&amp;gt; &amp;lt;servlet&amp;gt; &amp;lt;servlet-name&amp;gt;springmvc&amp;lt;/servlet-name&amp;gt; &amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt; &amp;lt;!--关联一个springmvc的配置文件:【servlet-name】-servlet.xml--&amp;gt; &amp;lt;init-param&amp;gt; &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt; &amp;lt;param-value&amp;gt;classpath:springmvc-servlet.</description>
    </item>
    
    <item>
      <title>Mybatis</title>
      <link>https://AloneInTheSea.github.io/mybatis/</link>
      <pubDate>Fri, 17 Jul 2020 18:32:08 +0800</pubDate>
      
      <guid>https://AloneInTheSea.github.io/mybatis/</guid>
      <description>Mybatis 1、简介 1.1、什么是Mybatis？  MyBatis 是一款优秀的持久层框架 它支持定制化 SQL、存储过程以及高级映射。 MyBatis 避免了几乎所有的 JDBC代码和手动设置参数以及获取结果集。 MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Ordinary Java Object,普通的 Java对象)映射成数据库中的记录。  1.2、如何获取Mybatis？   maven仓库
&amp;lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.mybatis&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.5.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;   Github：https://github.com/mybatis/mybatis-3/releases
  官方中文文档：https://mybatis.org/mybatis-3/zh/index.html
  2、第一个Mybatis程序  七步走：  2.1、建立数据库 create database mybatis; use mybatis; create table user( -&amp;gt; id int(20) not null primary key, -&amp;gt; name varchar(20) default &amp;#39;&amp;#39;, -&amp;gt; password varchar(20) default &amp;#39;&amp;#39;); insert into user values -&amp;gt; (1,&amp;#39;yxc&amp;#39;,&amp;#39;123456&amp;#39;), -&amp;gt; (2,&amp;#39;张三&amp;#39;,&amp;#39;123456&amp;#39;), -&amp;gt; (3,&amp;#39;李四&amp;#39;,&amp;#39;123456&amp;#39;); 2.</description>
    </item>
    
    <item>
      <title>111</title>
      <link>https://AloneInTheSea.github.io/111/</link>
      <pubDate>Fri, 17 Jul 2020 18:31:08 +0800</pubDate>
      
      <guid>https://AloneInTheSea.github.io/111/</guid>
      <description>111111 </description>
    </item>
    
    <item>
      <title>Blog</title>
      <link>https://AloneInTheSea.github.io/blog/</link>
      <pubDate>Fri, 17 Jul 2020 18:30:08 +0800</pubDate>
      
      <guid>https://AloneInTheSea.github.io/blog/</guid>
      <description>论杨旭晨有多帅  杨旭晨要多帅有多帅  </description>
    </item>
    
  </channel>
</rss>